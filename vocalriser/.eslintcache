[{"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\index.js":"1","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\App.js":"3","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\contexts\\user.context.js":"4","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\providers\\user.provider.js":"5","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\reducers\\user.reducer.js":"6","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\login\\Login.js":"7","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\login\\index.js":"8","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\home\\index.js":"9","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\home\\Home.js":"10","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\register\\index.js":"11","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\register\\Register.js":"12","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\helpers\\auth.helper.js":"13","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\header\\index.js":"14","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\header\\Header.js":"15","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\footer\\index.js":"16","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\footer\\Footer.js":"17","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\vocalists\\index.js":"18","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\vocalists\\Vocalists.js":"19","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\producers\\index.js":"20","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\producers\\Producers.js":"21","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\Jobs\\index.js":"22","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\Jobs\\Jobs.js":"23","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\utils\\common.utils.js":"24","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\helpers\\vocalists.helper.js":"25","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\waveform\\index.js":"26","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\waveform\\Waveform.js":"27","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\vocalists\\Search.js":"28","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\helpers\\producers.helper.js":"29","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\producers\\Search.js":"30","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\profile\\index.js":"31","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\profile\\Profile.js":"32","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\piano\\index.js":"33","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\piano\\Piano.js":"34","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\eachprofile\\index.js":"35","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\eachprofile\\EachProfile.js":"36","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\helpers\\profile.helper.js":"37","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\helpers\\gig.helper.js":"38","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\Jobs\\Search.js":"39","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\eachgig\\index.js":"40","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\eachgig\\EachGig.js":"41","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\nomatch\\index.js":"42","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\nomatch\\NoMatch.js":"43","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\createjob\\index.js":"44","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\createjob\\CreateJob.js":"45","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\helpers\\common.helper.js":"46","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\gigcenter\\index.js":"47","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\gigcenter\\GigCenter.js":"48","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\awardedgig\\index.js":"49","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\awardedgig\\AwardedGig.js":"50","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\messages\\index.js":"51","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\messages\\Messages.js":"52","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\helpers\\messages.helper.js":"53","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\helpers\\notifications.helper.js":"54"},{"size":457,"mtime":1610618039489,"results":"55","hashOfConfig":"56"},{"size":362,"mtime":1606758772215,"results":"57","hashOfConfig":"56"},{"size":2522,"mtime":1611475758941,"results":"58","hashOfConfig":"56"},{"size":106,"mtime":1610539988082,"results":"59","hashOfConfig":"56"},{"size":599,"mtime":1611652261309,"results":"60","hashOfConfig":"56"},{"size":1328,"mtime":1611652286833,"results":"61","hashOfConfig":"56"},{"size":3509,"mtime":1611762889670,"results":"62","hashOfConfig":"56"},{"size":49,"mtime":1610543626405,"results":"63","hashOfConfig":"56"},{"size":46,"mtime":1610555378485,"results":"64","hashOfConfig":"56"},{"size":1389,"mtime":1611762572607,"results":"65","hashOfConfig":"56"},{"size":58,"mtime":1610564265827,"results":"66","hashOfConfig":"56"},{"size":5575,"mtime":1611781906391,"results":"67","hashOfConfig":"56"},{"size":2953,"mtime":1611673438069,"results":"68","hashOfConfig":"56"},{"size":52,"mtime":1610621487112,"results":"69","hashOfConfig":"56"},{"size":3942,"mtime":1611762837999,"results":"70","hashOfConfig":"56"},{"size":52,"mtime":1610621770240,"results":"71","hashOfConfig":"56"},{"size":211,"mtime":1611137008291,"results":"72","hashOfConfig":"56"},{"size":61,"mtime":1610627265520,"results":"73","hashOfConfig":"56"},{"size":7751,"mtime":1611762951700,"results":"74","hashOfConfig":"56"},{"size":61,"mtime":1610628721159,"results":"75","hashOfConfig":"56"},{"size":7692,"mtime":1611763019800,"results":"76","hashOfConfig":"56"},{"size":46,"mtime":1610628868193,"results":"77","hashOfConfig":"56"},{"size":7868,"mtime":1611763006243,"results":"78","hashOfConfig":"56"},{"size":172,"mtime":1611672117092,"results":"79","hashOfConfig":"56"},{"size":1326,"mtime":1610980815748,"results":"80","hashOfConfig":"56"},{"size":58,"mtime":1610739287166,"results":"81","hashOfConfig":"56"},{"size":2657,"mtime":1611243952657,"results":"82","hashOfConfig":"56"},{"size":2280,"mtime":1611242185966,"results":"83","hashOfConfig":"56"},{"size":712,"mtime":1610980803634,"results":"84","hashOfConfig":"56"},{"size":2388,"mtime":1611242150628,"results":"85","hashOfConfig":"56"},{"size":55,"mtime":1610817341355,"results":"86","hashOfConfig":"56"},{"size":13193,"mtime":1611937360527,"results":"87","hashOfConfig":"56"},{"size":57,"mtime":1610872049349,"results":"88","hashOfConfig":"56"},{"size":1161,"mtime":1611239772932,"results":"89","hashOfConfig":"56"},{"size":67,"mtime":1610892319851,"results":"90","hashOfConfig":"56"},{"size":8750,"mtime":1611780794042,"results":"91","hashOfConfig":"56"},{"size":1355,"mtime":1611909475093,"results":"92","hashOfConfig":"56"},{"size":10001,"mtime":1611755485840,"results":"93","hashOfConfig":"56"},{"size":1788,"mtime":1611241985599,"results":"94","hashOfConfig":"56"},{"size":55,"mtime":1610956261556,"results":"95","hashOfConfig":"56"},{"size":14132,"mtime":1611762975253,"results":"96","hashOfConfig":"56"},{"size":55,"mtime":1611127023569,"results":"97","hashOfConfig":"56"},{"size":1059,"mtime":1611761961072,"results":"98","hashOfConfig":"56"},{"size":61,"mtime":1611156096598,"results":"99","hashOfConfig":"56"},{"size":11695,"mtime":1611762739851,"results":"100","hashOfConfig":"56"},{"size":897,"mtime":1611169857993,"results":"101","hashOfConfig":"56"},{"size":61,"mtime":1611211628728,"results":"102","hashOfConfig":"56"},{"size":12604,"mtime":1611762993702,"results":"103","hashOfConfig":"56"},{"size":64,"mtime":1611380649087,"results":"104","hashOfConfig":"56"},{"size":6311,"mtime":1611762689663,"results":"105","hashOfConfig":"56"},{"size":58,"mtime":1611475320129,"results":"106","hashOfConfig":"56"},{"size":6912,"mtime":1611763013775,"results":"107","hashOfConfig":"56"},{"size":3412,"mtime":1611648789163,"results":"108","hashOfConfig":"56"},{"size":2011,"mtime":1611648333027,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"aeoksf",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"112"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"112"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"112"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"112"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\index.js",[],["224","225"],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\App.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\contexts\\user.context.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\providers\\user.provider.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\reducers\\user.reducer.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\login\\Login.js",["226"],"import React, { useState, useContext, useRef } from 'react'\r\nimport UserContext from '../../contexts/user.context';\r\nimport { requestLogin } from '../helpers/auth.helper'\r\nimport { Redirect } from 'react-router-dom';\r\nimport './Login.css'\r\n\r\n\r\n\r\nlet Login = () => {\r\n\r\n    const email = useRef()\r\n    const password = useRef()\r\n\r\n\r\n    const [error, setError] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState()\r\n    const [user, dispatch] = useContext(UserContext)\r\n    const [success, setSuccess] = useState(false)\r\n    const [signup, setSignUp] = useState(false)\r\n    const [passwordShow, setPasswordShow] = useState(false)\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            loginUser()\r\n        }\r\n    }\r\n\r\n    const loginUser = async () => {\r\n        setError(false)\r\n        setErrorMessage('')\r\n        let userEmail = email.current.value\r\n        let userPassword = password.current.value\r\n\r\n\r\n        if (userEmail !== '') {\r\n            if (userPassword !== '') {\r\n                setError(false)\r\n                let data = {\r\n                    email: userEmail,\r\n                    password: userPassword\r\n                }\r\n                let result = await requestLogin(data)\r\n                if (result.error) {\r\n                    setError(true)\r\n                    setErrorMessage(result.error)\r\n                } else {\r\n                    \r\n                    await dispatch({\r\n                        type: \"LOGIN\",\r\n                        payload: result.user\r\n                    })\r\n                    setSuccess(true)\r\n                }\r\n\r\n            } else {\r\n                setError(true)\r\n                setErrorMessage('Password can not be empty')\r\n            }\r\n        } else {\r\n            setError(true)\r\n            setErrorMessage('Email can not be empty')\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const showPassword = () => {\r\n        setPasswordShow(!passwordShow)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"login-container\">\r\n\r\n            <div className=\"bp3-input-group .modifier login-general\">\r\n                <input onKeyPress={handleKeyPress} ref={email} type={\"email\"} className=\"bp3-input\" placeholder=\"Enter your email...\" autoComplete=\"on\" />\r\n                <button className={`bp3-button bp3-minimal bp3-intent-warning bp3-icon-envelope .modifier`}></button>\r\n            </div>\r\n\r\n\r\n            <div className=\"bp3-input-group .modifier login-general \">\r\n                <input onKeyPress={handleKeyPress} ref={password} type={passwordShow ? \"text\" : \"password\"} className=\"bp3-input\" placeholder=\"Enter your password...\" autoComplete=\"on\" />\r\n                <button onClick={showPassword} className={`bp3-button bp3-minimal bp3-intent-warning ${passwordShow ? 'bp3-icon-unlock' : 'bp3-icon-lock'} .modifier`}></button>\r\n            </div>\r\n\r\n\r\n            <button type=\"button\" onClick={loginUser} className={`bp3-button bp3-icon-log-in .modifier login-general ${error ? 'bp3-intent-danger' : 'bp3-intent-success'}`}>Sign in</button>\r\n\r\n            <button type=\"button\" onClick={() => setSignUp(true)} className=\"bp3-button .modifier login-general\">Sign up</button>\r\n\r\n            {error ? <p className=\"login-general login-error\"><i className=\"bp3-icon-error\"></i> {errorMessage}</p> : null}\r\n            {signup ? <Redirect push to=\"/registration\" /> : null}\r\n            {success ? <Redirect push to=\"/profile\" /> : null}\r\n\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\login\\index.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\home\\index.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\home\\Home.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\register\\index.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\register\\Register.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\helpers\\auth.helper.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\header\\index.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\header\\Header.js",["227"],"import React, { useContext, useState } from 'react';\r\nimport UserContext from '../../contexts/user.context';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { requestCurrentUser } from '../helpers/auth.helper'\r\nimport './Header.css'\r\nimport { getNotifications } from '../helpers/notifications.helper'\r\n\r\nlet notify = true\r\n\r\nexport default function Header() {\r\n\r\n\r\n\r\n  const [user, dispatch] = useContext(UserContext)\r\n  const [logoutUser, setLogout] = useState(false)\r\n  const [path, setPath] = useState()\r\n  const [notificationTab, setNotificationTab] = useState(false)\r\n  \r\n\r\n\r\n  const handleNotifications = async () => {\r\n    let currentUser = await requestCurrentUser(user.token)\r\n    let result = await getNotifications(currentUser.data.id, user.token)\r\n \r\n    if (result) {\r\n      await dispatch({\r\n        type:\"NOTIFICATIONS\",\r\n        payload:result\r\n      })\r\n    }\r\n  }\r\n\r\n  if (notify) {\r\n    \r\n    handleNotifications()\r\n    notify = false\r\n  } else {\r\n    notify = false\r\n  }\r\n\r\n\r\n\r\n  const locationChange = (nav) => {\r\n\r\n    let location = /[^/]*$/.exec(window.location.href)[0]\r\n\r\n    if (location === nav) {\r\n      window.location.reload()\r\n    } else{\r\n     // window.location = `/${nav}`\r\n     setPath(nav)\r\n    }\r\n   \r\n  }\r\n\r\n  const logout = async () => {\r\n    await dispatch({\r\n      type: \"LOGOUT\"\r\n    })\r\n    setLogout(true)\r\n  }\r\n\r\n  return (\r\n    <div >\r\n\r\n      <nav className=\"bp3-navbar bp3-dark\">\r\n        <div >\r\n          <div className=\"bp3-navbar-group bp3-align-left\">\r\n            <div className=\"bp3-navbar-heading\">VocalRiser</div>\r\n          </div>\r\n          <div className=\"bp3-navbar-group bp3-align-right header-menu\">\r\n            <button onClick={() => locationChange('home')} className=\"bp3-button bp3-minimal\">Home</button>\r\n            <button onClick={() => locationChange('gigcenter')} className=\"bp3-button bp3-minimal\">Gig Center</button>\r\n            <button onClick={() => locationChange('vocalists')} className=\"bp3-button bp3-minimal\">Vocalists</button>\r\n            <button onClick={() => locationChange('producers')} className=\"bp3-button bp3-minimal\">Producers</button>\r\n            <button onClick={() => locationChange('jobs')} className=\"bp3-button bp3-minimal\">Jobs</button>\r\n            <span className=\"bp3-navbar-divider\"></span>\r\n            <button onClick={() => locationChange('createjob')} className=\"bp3-button bp3-minimal bp3-icon-new-object\">Create Job</button>\r\n\r\n            <span className=\"bp3-navbar-divider\"></span>\r\n\r\n            <button onClick={() => locationChange('profile')} title=\"profile\" className=\"bp3-button bp3-minimal bp3-icon-user\"></button>\r\n            <button onClick={() => setNotificationTab(!notificationTab)} className=\"bp3-button bp3-minimal bp3-icon-notifications\" title=\"notifications\"></button>\r\n            <button className=\"bp3-button bp3-minimal bp3-icon-cog\"></button>\r\n\r\n            <button onClick={() => locationChange(`messages`)} className={`bp3-button bp3-minimal bp3-icon-inbox-update bp3-intent-${user.notifications.find(e => e.type === \"message\") ? 'success' : 'no'}`} title=\"inbox\"> </button>\r\n\r\n            <button onClick={logout} className=\"bp3-button bp3-minimal bp3-icon-log-out\" title=\"logout\"></button>\r\n          </div>\r\n\r\n        </div>\r\n      </nav>\r\n\r\n      {\r\n        notificationTab ?\r\n          <div className=\"header-notification\">\r\n            <ul className=\"bp3-menu .modifier bp3-elevation-1\">\r\n\r\n              {user.notifications.length > 0 ? user.notifications.map((n, index) =>\r\n                <li>\r\n                  <a class=\"bp3-menu-item bp3-icon-people\" tabindex=\"0\">Share...</a>\r\n                </li>\r\n              ) : 'no notification'}\r\n\r\n\r\n\r\n            </ul>\r\n          </div> : <div className=\"header-notification\">\r\n\r\n          </div>\r\n      }\r\n      { path ? <Redirect push to={`/${path}`} /> : null}\r\n      {logoutUser ? <Redirect push to=\"/\" /> : null}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\footer\\index.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\footer\\Footer.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\vocalists\\index.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\vocalists\\Vocalists.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\producers\\index.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\producers\\Producers.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\Jobs\\index.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\Jobs\\Jobs.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\utils\\common.utils.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\helpers\\vocalists.helper.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\waveform\\index.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\waveform\\Waveform.js",["228"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport WaveSurfer from \"wavesurfer.js\";\r\n\r\nimport './Waveform.css'\r\nimport \"@blueprintjs/core/lib/css/blueprint.css\"\r\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\r\n\r\nconst formWaveSurferOptions = ref => ({\r\n  container: ref,\r\n  waveColor: \"#eee\",\r\n  progressColor: \"OrangeRed\",\r\n  cursorColor: \"OrangeRed\",\r\n  barWidth: 4,\r\n  barRadius: 3,\r\n  responsive: true,\r\n  height: 120,\r\n  // If true, normalize by the maximum peak instead of 1.0.\r\n  normalize: true,\r\n  // Use the PeakCache to improve rendering speed of large waveforms.\r\n  partialRender: true\r\n});\r\n\r\nexport default function Waveform({ url,title }) {\r\n  const waveformRef = useRef(null);\r\n  var wavesurfer = useRef(null);\r\n  const [playing, setPlay] = useState(false);\r\n  const [volume, setVolume] = useState(0.5);\r\n\r\n  // create new WaveSurfer instance\r\n  // On component mount and when url changes\r\n  useEffect(() => {\r\n    setPlay(false);\r\n\r\n    const options = formWaveSurferOptions(waveformRef.current);\r\n    wavesurfer.current = WaveSurfer.create(options);\r\n    wavesurfer.current.load(url);\r\n\r\n    wavesurfer.current.on(\"ready\", function () {\r\n      // https://wavesurfer-js.org/docs/methods.html\r\n      // wavesurfer.current.play();\r\n      // setPlay(true);\r\n\r\n      // make sure object stillavailable when file loaded\r\n      if (wavesurfer.current) {\r\n        wavesurfer.current.setVolume(volume);\r\n        setVolume(volume);\r\n      }\r\n    });\r\n    // Removes events, elements and disconnects Web Audio nodes.\r\n    // when component unmount\r\n    return () => wavesurfer.current.destroy();\r\n  }, [url]);\r\n\r\n  const handlePlayPause = () => {\r\n    setPlay(!playing);\r\n    wavesurfer.current.playPause();\r\n  };\r\n\r\n\r\n  const onVolumeChange = e => {\r\n    const { target } = e;\r\n    const newVolume = +target.value;\r\n\r\n    if (newVolume) {\r\n      setVolume(newVolume);\r\n      wavesurfer.current.setVolume(newVolume || 1);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n    <h5 className=\"bp3-heading\">{title}</h5>\r\n      <div id=\"waveform\" ref={waveformRef} />\r\n      <div className=\"controls\">\r\n      <button onClick={handlePlayPause} type=\"button\" className={`bp3-button ${!playing ? \"bp3-icon-play\" : \"bp3-icon-pause\"}`}></button>\r\n      \r\n    <input \r\n      className=\"controls-volume\"\r\n      type=\"range\"\r\n      id=\"volume\"\r\n      name=\"volume\"\r\n      // waveSurfer recognize value of `0` same as `1`\r\n      //  so we need to set some zero-ish value for silence\r\n      min=\"0.01\"\r\n      max=\"1\"\r\n      step=\".025\"\r\n      onChange={onVolumeChange}\r\n      defaultValue={volume}\r\n    />\r\n    \r\n      </div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\vocalists\\Search.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\helpers\\producers.helper.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\producers\\Search.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\profile\\index.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\profile\\Profile.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\piano\\index.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\piano\\Piano.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\eachprofile\\index.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\eachprofile\\EachProfile.js",["229","230"],"import React, { useContext, useState, useRef } from 'react'\r\nimport UserContext from '../../contexts/user.context';\r\nimport { requestCurrentUser } from '../helpers/auth.helper'\r\nimport { getUserByID } from '../helpers/profile.helper'\r\nimport { createMessage, sendMessage } from '../helpers/messages.helper'\r\nimport { createNotification } from '../helpers/notifications.helper'\r\nimport { Redirect } from 'react-router-dom';\r\nimport Waveform from '../waveform'\r\nimport PianoPlay from '../piano'\r\n\r\n\r\n\r\nconst EachProfile = (props) => {\r\n\r\n    const messageInput = useRef()\r\n\r\n    const [user, dispatch] = useContext(UserContext)\r\n    const [login, setLogin] = useState('waiting')\r\n    let [selected, setSelected] = useState('video')\r\n    let [section, setSection] = useState()\r\n    let [viewUser, setViewUser] = useState({})\r\n    const [message, setMessage] = useState()\r\n    const [start,setStart] = useState(true)\r\n\r\n\r\n    const handlSendMessage = async (e) => {\r\n        e.preventDefault()\r\n        \r\n\r\n        let data = {\r\n            sender: user.user.id,\r\n            sender_fullname: `${user.user.first_name} ${user.user.last_name}`,\r\n            reciever: viewUser.id,\r\n            reciever_fullname: `${viewUser.first_name} ${viewUser.last_name}`,\r\n            message: messageInput.current.value\r\n        }\r\n        let result = await createMessage(data, user.token)\r\n\r\n        if (result.hasOwnProperty(\"id\")) {\r\n            setMessage(false)\r\n            let notification = {\r\n                type: \"message\",\r\n                fromUser: user.user.id,\r\n                toUser: viewUser.id,\r\n                messageID: result.id\r\n            }\r\n            let notify = await createNotification(notification, user.token)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const checkCurrentUser = async () => {\r\n\r\n        const result = await requestCurrentUser(user.token)\r\n        if (result.status) {\r\n            await dispatch({\r\n                type: \"USER\",\r\n                payload: result.data\r\n            })\r\n      \r\n            let viewedUser = await getUserByID(props.match.params.id, user.token)\r\n       \r\n            if (viewedUser) {\r\n                setViewUser(viewedUser)\r\n            \r\n                setLogin('success')\r\n            } else {\r\n                setLogin('failed')\r\n            }\r\n\r\n        } else {\r\n            setLogin('failed')\r\n        }\r\n    }\r\n\r\n\r\n    if (start) {\r\n        checkCurrentUser()\r\n       setStart(false)\r\n    }\r\n\r\n    if (login === 'waiting') {\r\n        return (\r\n            <PianoPlay width={400} />\r\n        )\r\n    }\r\n    else if (login === 'failed') {\r\n        return (\r\n            <Redirect push to=\"/\" />\r\n\r\n        )\r\n    }\r\n\r\n    else if (!viewUser.hasOwnProperty('id')) {\r\n       props.history.goBack()\r\n        return (\r\n            <p></p>\r\n        )\r\n    }\r\n    else {\r\n       \r\n\r\n        return (\r\n            <div className=\"profile-section\">\r\n                <div onMouseEnter={() => setSection(1)} onMouseLeave={() => setSection(0)} className={`bp3-card bp3-elevation-${section === 1 ? '4' : '2'} .modifier profile-section-one`}>\r\n                    <div className=\"profile-section-one-each\">\r\n                        <img alt=\"user\" style={{ width: '100px' }} src={viewUser.image} />\r\n\r\n                    </div>\r\n\r\n                    <h1 className=\"bp3-heading profile-section-one-each\">{viewUser.first_name} {viewUser.last_name}</h1>\r\n                    {viewUser.id !== user.user.id? <button onClick={() => setMessage(true)} className=\"bp3-button\">message</button>:null}\r\n\r\n\r\n                    <div className=\"profile-section-one-each\">\r\n                        <span style={{ marginLeft: '1%' }} className=\"bp3-tag .modifier\">{viewUser.age}</span>\r\n                        <span style={{ marginLeft: '1%' }} className=\"bp3-tag .modifier\">{viewUser.gender}</span>\r\n                    </div>\r\n\r\n                    <div className=\"profile-section-one-each\">\r\n                        Sounds like: {viewUser.soundslike.split(',').map((g, i) => <span key={i} style={{ marginLeft: '1%', marginBottom: '1%' }} className=\"bp3-tag .modifier\">{g}</span>)}\r\n                    </div>\r\n                    <div className=\"profile-section-one-each\">\r\n                        Microphones: {viewUser.microphone.split(',').map((g, i) => <span key={i} style={{ marginLeft: '1%', marginBottom: '1%' }} className=\"bp3-tag .modifier\">{g}</span>)}\r\n                    </div>\r\n                    <div className=\"profile-section-one-each\">\r\n                        Genres: {viewUser.genres.split(',').map((g, i) => <span key={i} style={{ marginLeft: '1%', marginBottom: '1%' }} className=\"bp3-tag .modifier\">{g}</span>)}\r\n                    </div>\r\n                    <div className=\"profile-section-one-each\">\r\n                        Country: <span style={{ marginLeft: '1%', marginBottom: '1%', marginRight: '1%' }} className=\"bp3-tag .modifier\">{viewUser.country}</span>\r\n                    City: <span style={{ marginLeft: '1%', marginBottom: '1%' }} className=\"bp3-tag .modifier\">{viewUser.city}</span>\r\n                    </div>\r\n                    <div className=\"profile-section-one-each\">\r\n                   \r\n                        Raiting: {viewUser.raiting === null  ? <span className=\"bp3-tag\">No reviews yet</span> : <span\r\n                            className={`bp3-tag bp3-intent-${parseFloat(viewUser.raiting) <= 3 ? 'danger' :\r\n                                parseFloat(viewUser.raiting) > 4 ? 'success' : 'warning'}`}>{viewUser.raiting}</span>}\r\n                    </div>\r\n                </div>\r\n                <div onMouseEnter={() => setSection(2)} onMouseLeave={() => setSection(0)} className={`bp3-card bp3-elevation-${section === 2 ? '4' : '2'} .modifier profile-section-two`}>\r\n                    <div className=\"profile-section-two-each\">\r\n                        <Waveform url={viewUser.track_url} title={viewUser.track_title} />\r\n                    </div>\r\n\r\n                    <div className=\"profile-section-two-each\">\r\n                        <span className=\"bp3-tag\">About</span> {viewUser.about}\r\n                    </div>\r\n\r\n                    <div className=\"bp3-tabs profile-section-two-each\">\r\n                        <ul className=\"bp3-tab-list .modifier\" role=\"tablist\">\r\n                            <li onClick={() => setSelected('video')} className=\"bp3-tab\" role=\"tab\" aria-selected={selected === 'video' ? true : false}>Video</li>\r\n                            <li onClick={() => setSelected('review')} className=\"bp3-tab\" role=\"tab\" aria-selected={selected === 'review' ? true : false}>Reviews</li>\r\n                            <li onClick={() => setSelected('connection')} className=\"bp3-tab\" role=\"tab\" aria-selected={selected === 'connection' ? true : false}>Connections</li>\r\n                        </ul>\r\n                        <div className=\"bp3-tab-panel\" role=\"tabpanel\" aria-hidden={selected === 'video' ? false : true}>\r\n                            <iframe title=\"video\" width=\"560\" height=\"315\" src={viewUser.youtube_link} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                        </div>\r\n                        <div className=\"bp3-tab-panel\" role=\"tabpanel\" aria-hidden={selected === 'review' ? false : true}>Reviews</div>\r\n                        <div className=\"bp3-tab-panel\" role=\"tabpanel\" aria-hidden={selected === 'connection' ? false : true}>Connections</div>\r\n                    </div>\r\n                </div>\r\n\r\n                {message ? <div className=\"bp3-dialog-container\">\r\n                    <div className=\"bp3-dialog\">\r\n                        <div className=\"bp3-dialog-header\">\r\n                            <span className=\"bp3-icon-large bp3-icon-inbox\"></span>\r\n                            <h4 className=\"bp3-heading\">Message</h4>\r\n                            <button aria-label=\"Close\" className=\"bp3-dialog-close-button bp3-button bp3-minimal bp3-icon-cross\"></button>\r\n                        </div>\r\n                        <div className=\"bp3-dialog-body\">\r\n                            <form onSubmit={handlSendMessage}>\r\n                                <input ref={messageInput} type=\"text\" className=\"bp3-input\" required minLength={1} />\r\n                                <button onClick={() => setMessage(false)} type=\"button\" className=\"bp3-button\">close</button>\r\n                                <button type=\"submit\" className=\"bp3-button bp3-intent-primary\">Send</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div> : null}\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default EachProfile","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\helpers\\profile.helper.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\helpers\\gig.helper.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\Jobs\\Search.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\eachgig\\index.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\eachgig\\EachGig.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\nomatch\\index.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\nomatch\\NoMatch.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\createjob\\index.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\createjob\\CreateJob.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\helpers\\common.helper.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\gigcenter\\index.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\gigcenter\\GigCenter.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\awardedgig\\index.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\awardedgig\\AwardedGig.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\messages\\index.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\messages\\Messages.js",["231","232","233"],"import React, { useState, useContext, useRef } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport UserContext from '../../contexts/user.context';\r\nimport { requestCurrentUser } from '../helpers/auth.helper'\r\nimport { getEachMessages, getMessages, sendMessage, deleteMessage, createMessage } from '../helpers/messages.helper'\r\nimport { readNotification } from '../helpers/notifications.helper'\r\nimport PianoPlay from '../piano'\r\nimport './Messages.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nlet Messages = () => {\r\n    const sendMessageInput = useRef()\r\n    const [user, dispatch] = useContext(UserContext)\r\n    const [login, setLogin] = useState('waiting')\r\n    const [messages, setMessages] = useState([])\r\n    const [eachMessages, setEachMessages] = useState([])\r\n    const [selectedMessage, setSelectedMessage] = useState(0)\r\n    const [start,setStart] = useState(true)\r\n\r\n\r\n    const handleNotification = async () => {\r\n        user.notifications.map(n=> {\r\n            if(n.type === \"message\") {\r\n                 readNotification(n.id, user.token)\r\n                 dispatch({\r\n                    type: \"NOTIFICATIONS\",\r\n                    payload: user.notifications.filter(item => item.id !== n.id)\r\n                })\r\n            }\r\n        })\r\n\r\n        \r\n\r\n    }\r\n\r\n    const handleDeleteMessage = async (message_id, type) => {\r\n        let data = {\r\n            id: message_id,\r\n            type\r\n        }\r\n       \r\n        let result = await deleteMessage(data, user.token)\r\n\r\n        if (result) {\r\n            let messages = await getMessages(user.user.id, user.token)\r\n            if (messages) {\r\n                setMessages(messages)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const handleSendMessage = async (e, message_id, sender_id, sender_fullname, sender_message) => {\r\n        e.preventDefault()\r\n        let data = {\r\n            message_id,\r\n            sender_id,\r\n            sender_fullname,\r\n            sender_message: sendMessageInput.current.value\r\n        }\r\n       \r\n        let result = await sendMessage(data, user.token)\r\n        let eachMessage = await getEachMessages(message_id, user.token)\r\n        if (result && eachMessage) {\r\n            setEachMessages(eachMessage)\r\n            sendMessageInput.current.value = \"\"\r\n        }\r\n    }\r\n\r\n    const handleEachMessages = async (message_id) => {\r\n\r\n      \r\n        setSelectedMessage(message_id)\r\n      \r\n        let eachMessages = await getEachMessages(message_id, user.token)\r\n       \r\n        if (eachMessages) {\r\n            setEachMessages(eachMessages)\r\n        }\r\n    }\r\n\r\n    const checkCurrentUser = async () => {\r\n        handleNotification()\r\n       \r\n        const result = await requestCurrentUser(user.token)\r\n        \r\n\r\n        const messages = await getMessages(result.data.id, user.token)\r\n       \r\n        if (result.status && messages) {\r\n            await dispatch({\r\n                type: \"USER\",\r\n                payload: result.data\r\n            })\r\n            setMessages(messages.reverse())\r\n            setLogin('success')\r\n        } else {\r\n            setLogin('failed')\r\n        }\r\n    }\r\n\r\n    if (start) {\r\n        checkCurrentUser()\r\n       setStart(false)\r\n    }\r\n\r\n\r\n    if (login === 'waiting') {\r\n        return (\r\n            <PianoPlay width={300} classAdd=\"loading\" />\r\n        )\r\n    }\r\n    else if (login === 'failed') {\r\n        return (\r\n            <Redirect push to=\"/\" />\r\n        )\r\n    }\r\n\r\n    else if (!user.user.hasOwnProperty('id')) {\r\n        return (\r\n            <Redirect push to=\"/\" />\r\n        )\r\n    }\r\n\r\n    else {\r\n        return (\r\n            <div>\r\n\r\n                {messages.length > 0 ? <div className=\"message-container\">\r\n\r\n                    <div className=\"bp3-card .modifier main-message-container\">\r\n                        {messages.map((message, index) => {\r\n\r\n                            if (message.sender === user.user.id && message.sender_active === 1) {\r\n                                return <div key={index}  >\r\n\r\n\r\n\r\n                                    <button style={{ width: '89%', position: 'relative' }} className={`bp3-button bp3-outlined bp3-intent-${selectedMessage === message.id ? 'success' : null}`} onClick={() => handleEachMessages(message.id)} key={index}>{message.reciever_fullname}</button>\r\n\r\n                                    <button style={{ float: 'right' }} onClick={() => handleDeleteMessage(message.id, 'sender_active')} className=\"bp3-button bp3-minimal bp3-icon-delete bp3-intent-danger\"></button>\r\n                                </div>\r\n                            } else if (message.reciever === user.user.id && message.reciever_active === 1) {\r\n                                return <div key={index}  >\r\n\r\n                                    <button style={{ width: '89%', position: 'relative' }} className={`bp3-button bp3-outlined bp3-intent-${selectedMessage === message.id ? 'success' : null}`} onClick={() => handleEachMessages(message.id)} key={index}>{message.sender_fullname}</button>\r\n\r\n                                    <button style={{ float: 'right' }} onClick={() => handleDeleteMessage(message.id, 'sender_active')} className=\"bp3-button bp3-minimal bp3-icon-delete bp3-intent-danger\"></button>\r\n                                </div>\r\n                            }\r\n                        })}\r\n                    </div>\r\n\r\n                    {selectedMessage > 0 ? <div className=\"bp3-card .modifier each-message-container\">\r\n                        {eachMessages.length > 0 ? eachMessages.map((m, i) => <div key={i}>\r\n                            <Link to={`/profiles/${m.sender_id}`}>{m.sender_fullname}</Link>\r\n                            <p>{m.sender_message}</p>\r\n                        </div>) : 'no Messages'}\r\n                        <div style={{ marginTop: \"10%\" }}>\r\n                            <form onSubmit={(e) => handleSendMessage(e, selectedMessage, user.user.id, `${user.user.first_name} ${user.user.last_name}`)}>\r\n                                <input ref={sendMessageInput} type=\"text\" minLength={1} className=\"bp3-input\" required />\r\n                                <button style={{ marginLeft: \"1%\" }} className=\"bp3-button \">send message</button>\r\n                            </form>\r\n\r\n                        </div>\r\n\r\n                    </div> : null}\r\n\r\n\r\n                </div> : <div>\r\n                        You have not received any messages yet!\r\n                        Employers can message bidders to discuss bids and ask questions.\r\n\r\n                        This is an important part of the bidding process as it allows for questions to be\r\n                        answered before a gig is awarded.\r\n\r\n                        Keep an eye out for new messages by watching the envelope next to your username above.\r\n\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Messages","C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\helpers\\messages.helper.js",[],"C:\\Users\\User\\Documents\\GitHub\\vocalriserfrontend\\vocalriser\\src\\components\\helpers\\notifications.helper.js",[],{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":17,"column":12,"nodeType":"240","messageId":"241","endLine":17,"endColumn":16},{"ruleId":"242","severity":1,"message":"243","line":101,"column":19,"nodeType":"244","endLine":101,"endColumn":73},{"ruleId":"245","severity":1,"message":"246","line":52,"column":6,"nodeType":"247","endLine":52,"endColumn":11,"suggestions":"248"},{"ruleId":"238","severity":1,"message":"249","line":5,"column":25,"nodeType":"240","messageId":"241","endLine":5,"endColumn":36},{"ruleId":"238","severity":1,"message":"250","line":47,"column":17,"nodeType":"240","messageId":"241","endLine":47,"endColumn":23},{"ruleId":"238","severity":1,"message":"251","line":5,"column":68,"nodeType":"240","messageId":"241","endLine":5,"endColumn":81},{"ruleId":"252","severity":1,"message":"253","line":25,"column":33,"nodeType":"254","messageId":"255","endLine":25,"endColumn":35},{"ruleId":"252","severity":1,"message":"256","line":135,"column":56,"nodeType":"254","messageId":"257","endLine":135,"endColumn":58},"no-native-reassign",["258"],"no-negated-in-lhs",["259"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'volume'. Either include it or remove the dependency array. You can also do a functional update 'setVolume(v => ...)' if you only need 'volume' in the 'setVolume' call.","ArrayExpression",["260"],"'sendMessage' is defined but never used.","'notify' is assigned a value but never used.","'createMessage' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"261","fix":"262"},"Update the dependencies array to be: [url, volume]",{"range":"263","text":"264"},[1636,1641],"[url, volume]"]